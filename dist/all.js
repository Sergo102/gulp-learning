"use strict";var a=void 0,hello="";function _toConsumableArray(r){return _arrayWithoutHoles(r)||_iterableToArray(r)||_unsupportedIterableToArray(r)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(r,e){if(r){if("string"==typeof r)return _arrayLikeToArray(r,e);var o=Object.prototype.toString.call(r).slice(8,-1);return"Object"===o&&r.constructor&&(o=r.constructor.name),"Map"===o||"Set"===o?Array.from(r):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?_arrayLikeToArray(r,e):void 0}}function _iterableToArray(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}function _arrayWithoutHoles(r){if(Array.isArray(r))return _arrayLikeToArray(r)}function _arrayLikeToArray(r,e){(null==e||e>r.length)&&(e=r.length);for(var o=0,t=new Array(e);o<e;o++)t[o]=r[o];return t}function sum(r,e,o){return r+e+o}console.log(hello);var numbers=[1,2,3];console.log(sum.apply(void 0,numbers)),console.log(sum.apply(null,numbers));var numberStore=[0,1,2],newNumber=12;numberStore=[].concat(_toConsumableArray(numberStore),[newNumber]),console.log(numberStore);var MAX=100;function doSomeWork(r){if(r>MAX)throw new Error("At most ".concat(MAX," allowed: ").concat(r,"!"))}doSomeWork(1e3);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIiwibGliLmpzIiwic2xpZGVyLmpzIl0sIm5hbWVzIjpbImEiLCJ1bmRlZmluZWQiLCJoZWxsbyIsInN1bSIsIngiLCJ5IiwieiIsImNvbnNvbGUiLCJsb2ciLCJudW1iZXJzIiwiYXBwbHkiLCJudW1iZXJTdG9yZSIsIm5ld051bWJlciIsImNvbmNhdCIsIl90b0NvbnN1bWFibGVBcnJheSIsIk1BWCIsImRvU29tZVdvcmsiLCJFcnJvciJdLCJtYXBwaW5ncyI6ImFBQUEsSUFBTUEsT0FBSUMsRUFHSkMsTUFBUSxHLG0rQkNJZCxTQUFTQyxJQUFJQyxFQUFHQyxFQUFHQyxHQUNqQixPQUFPRixFQUFJQyxFQUFJQyxDQUNqQixDREpBQyxRQUFRQyxJQUFJTixPQ01aLElBQU1PLFFBQVUsQ0FBQyxFQUFHLEVBQUcsR0FFdkJGLFFBQVFDLElBQUlMLElBQUdPLFdBQUEsRUFBSUQsVUFFbkJGLFFBQVFDLElBQUlMLElBQUlPLE1BQU0sS0FBTUQsVUFFNUIsSUFBSUUsWUFBYyxDQUFDLEVBQUcsRUFBRyxHQUNuQkMsVUFBWSxHQUNsQkQsWUFBVyxHQUFBRSxPQUFBQyxtQkFBT0gsYUFBVyxDQUFFQyxZQUMvQkwsUUFBUUMsSUFBSUcsYUNwQlosSUFBTUksSUFBTSxJQU1aLFNBQVNDLFdBQVdaLEdBQ2xCLEdBQUlBLEVBQUlXLElBQ04sTUFBTSxJQUFJRSxNQUFLLFdBQUFKLE9BQVlFLElBQUcsY0FBQUYsT0FBYVQsRUFBQyxLQUVoRCxDQUVBWSxXQUFXIiwiZmlsZSI6ImFsbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGEgPSB1bmRlZmluZWQ7XHJcbmE/Pzc7XHJcblxyXG5jb25zdCBoZWxsbyA9ICcnO1xyXG5cclxuY29uc29sZS5sb2coaGVsbG8pO1xuIiwiLyoqXHJcbiAqXHJcbiAqIEBwYXJhbSB7aW50fSB4IFRoZSBmaXJzdCBudW1iZXJcclxuICogQHBhcmFtIHtpbnR9IHkgVGhlIHNlY29uZCBudW1iZXJcclxuICogQHBhcmFtIHtpbnR9IHogVGhlIHRoaXJkIG51bWJlclxyXG4gKiBAcmV0dXJuIHtpbnR9XHJcbiAqL1xyXG5mdW5jdGlvbiBzdW0oeCwgeSwgeikge1xyXG4gIHJldHVybiB4ICsgeSArIHo7XHJcbn1cclxuXHJcbmNvbnN0IG51bWJlcnMgPSBbMSwgMiwgM107XHJcblxyXG5jb25zb2xlLmxvZyhzdW0oLi4ubnVtYmVycykpO1xyXG5cclxuY29uc29sZS5sb2coc3VtLmFwcGx5KG51bGwsIG51bWJlcnMpKTtcclxuXHJcbmxldCBudW1iZXJTdG9yZSA9IFswLCAxLCAyXTtcclxuY29uc3QgbmV3TnVtYmVyID0gMTI7XHJcbm51bWJlclN0b3JlID0gWy4uLm51bWJlclN0b3JlLCBuZXdOdW1iZXJdO1xyXG5jb25zb2xlLmxvZyhudW1iZXJTdG9yZSk7XG4iLCJjb25zdCBNQVggPSAxMDA7XHJcblxyXG4vKipcclxuICpcclxuICogQHBhcmFtIHtpbnR9IHhcclxuICovXHJcbmZ1bmN0aW9uIGRvU29tZVdvcmsoeCkge1xyXG4gIGlmICh4ID4gTUFYKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoYEF0IG1vc3QgJHtNQVh9IGFsbG93ZWQ6ICR7eH0hYCk7XHJcbiAgfVxyXG59XHJcblxyXG5kb1NvbWVXb3JrKDEwMDApO1xuIl19
